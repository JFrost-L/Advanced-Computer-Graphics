#version 400 core

layout (lines_adjacency) in;
layout (line_strip, max_vertices = 128) out;

uniform int tess;
float du, u;
float u2, u3;
float t1, t2, t3;
vec4 p;

void main(void) {
	du = 1 / float(tess);
	u = 0;
	for (int i = 0; i <= tess; i++)
	{
		t1 = 1 - u;
		t2 = t1 * t1; // t2 = (1 - u)^2
		t3 = t1 * t2; // t3 = (1 - u)^3
		u2 = u * u;
		u3 = u * u2;
		p = t3 * gl_in[0].gl_Position + 3 * u * t2 * gl_in[1].gl_Position + 3 * u2 * t1 * gl_in[2].gl_Position + u3 * gl_in[3].gl_Position;
		gl_Position = p;
		u += du;
		EmitVertex();
	}
	EndPrimitive();
}